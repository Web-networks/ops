---
# This role is almost entirely based on documentation in
# kubespray repo on setting up k8s cluster with vagrant:
#
# https://github.com/kubernetes-sigs/kubespray/blob/master/docs/vagrant.md

- name: Check k8s-cluster role parameters
  assert: { that: "{{ item }} is defined" }
  with_items: 
    - user
    - vm_prefix
    - vm_cpus
    - vm_os
    - vm_num_instances
    - vm_subnet_prefix

- set_fact:
    base_path: "/home/{{ user }}/base"

- set_fact:
    vagrant_path: "{{ base_path }}/vagrant"
    venv_path: "{{ base_path }}/venv"

- name: Install setuptools for pip module to work
  apt:
    name: python-setuptools
    state: present

- name: Manually create the initial virtualenv
  become_user: "{{ user }}"
  command:
    cmd: "virtualenv --python=/usr/bin/python3.7 {{ venv_path }}"
    creates: "{{ venv_path }}"

- name: Copy requirements.txt
  become_user: "{{ user }}"
  copy:
    src: "{{ role_path }}/files/requirements.txt"
    dest: "{{ base_path }}/requirements.txt"

- name: Install requirements
  become_user: "{{ user }}"
  pip: 
    requirements: "{{ base_path }}/requirements.txt"
    virtualenv: "{{ venv_path }}"
    virtualenv_python: python3.7

- name: Copy Vagrantfile
  become_user: "{{ user }}"
  copy:
    src: "{{ role_path }}/files/Vagrantfile"
    dest: "{{ base_path }}/Vagrantfile"

# TODO: do we really need to store it on jumphost?
- name: Create vagrant directory
  become_user: "{{ user }}"
  file:
    path: "{{ vagrant_path }}"
    state: directory

- name: Create vagrant/config.rb
  become_user: "{{ user }}"
  template:
    src: config.rb.j2
    dest: "{{ vagrant_path }}/config.rb"

- name: Make RPM cache directory for VMs
  become_user: "{{ user }}"
  file:
    path: "{{ base_path }}/temp/docker_rpms"
    state: directory

- name: Install rsync for vagrant
  apt:
    name: rsync
    state: present

- name: Please do the following!
  debug:
    msg:
      - ssh bigone.demist.ru
      - cd base
      - vagrant up
      - vagrant ssh-config > ~/.ssh/config

#- name: Run VMs
#  become_user: "{{ user }}"
#  shell:
#    cmd: vagrant up
#    chdir: "{{ base_path }}"

#- name: Create kubectl configuration dir
#  file:
#    path: /home/{{ user }}/.kube
#    state: directory
#
#- name: Install kubectl config for {{ user }} user
#  file:
#    src: "{{ inventory_path }}/artifacts/admin.conf"
#    dest: /home/{{ user }}/.kube/config
#    force: yes
#    owner: neuroide
#    group: neuroide
#    state: link
#
#- name: Install kubectl system-wide
#  become: yes
#  file:
#    src: "{{ inventory_path }}/artifacts/kubectl"
#    dest: /usr/local/bin/kubectl
#    force: yes
#    owner: root
#    group: root
#    state: link
...
